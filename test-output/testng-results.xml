<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="326502" started-at="2017-04-10T10:54:38Z" finished-at="2017-04-10T11:00:04Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="3" started-at="2017-04-10T10:54:38Z" finished-at="2017-04-10T10:54:38Z">
    </test> <!-- Test1 -->
    <test name="Test2" duration-ms="7426" started-at="2017-04-10T10:54:38Z" finished-at="2017-04-10T10:54:45Z">
      <class name="testScripts.VisionLogin">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testScripts.VisionLogin@42f93a98]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-04-10T16:24:38Z" finished-at="2017-04-10T16:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="loginQA(java.lang.String)[pri:0, instance:testScripts.VisionLogin@42f93a98]" name="loginQA" duration-ms="7220" started-at="2017-04-10T16:24:38Z" finished-at="2017-04-10T16:24:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[QA3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginQA -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:testScripts.VisionLogin@42f93a98]" name="AfterMethod" is-config="true" duration-ms="202" started-at="2017-04-10T16:24:45Z" finished-at="2017-04-10T16:24:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- testScripts.VisionLogin -->
    </test> <!-- Test2 -->
    <test name="Test5" duration-ms="37693" started-at="2017-04-10T10:54:45Z" finished-at="2017-04-10T10:55:23Z">
      <class name="testScripts.ThirdPartyProgress">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testScripts.ThirdPartyProgress@436e852b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-04-10T16:24:45Z" finished-at="2017-04-10T16:24:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="refresh(java.lang.String)[pri:0, instance:testScripts.ThirdPartyProgress@436e852b]" name="refresh" is-config="true" duration-ms="24502" started-at="2017-04-10T16:24:45Z" finished-at="2017-04-10T16:25:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[QA3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method status="PASS" signature="ThirdPartyProgressTest()[pri:0, instance:testScripts.ThirdPartyProgress@436e852b]" name="ThirdPartyProgressTest" duration-ms="13037" started-at="2017-04-10T16:25:10Z" finished-at="2017-04-10T16:25:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ThirdPartyProgressTest -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:testScripts.ThirdPartyProgress@436e852b]" name="AfterMethod" is-config="true" duration-ms="153" started-at="2017-04-10T16:25:23Z" finished-at="2017-04-10T16:25:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- testScripts.ThirdPartyProgress -->
    </test> <!-- Test5 -->
    <test name="Test6" duration-ms="88148" started-at="2017-04-10T10:55:23Z" finished-at="2017-04-10T10:56:51Z">
      <class name="testScripts.UpfitProgress">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testScripts.UpfitProgress@6b57696f]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-04-10T16:25:23Z" finished-at="2017-04-10T16:25:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="refresh(java.lang.String)[pri:0, instance:testScripts.UpfitProgress@6b57696f]" name="refresh" is-config="true" duration-ms="22443" started-at="2017-04-10T16:25:23Z" finished-at="2017-04-10T16:25:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[QA3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- refresh -->
        <test-method status="PASS" signature="UpfitProgressTest()[pri:0, instance:testScripts.UpfitProgress@6b57696f]" name="UpfitProgressTest" duration-ms="65573" started-at="2017-04-10T16:25:46Z" finished-at="2017-04-10T16:26:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpfitProgressTest -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:testScripts.UpfitProgress@6b57696f]" name="AfterMethod" is-config="true" duration-ms="131" started-at="2017-04-10T16:26:51Z" finished-at="2017-04-10T16:26:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- testScripts.UpfitProgress -->
    </test> <!-- Test6 -->
    <test name="Test7" duration-ms="193160" started-at="2017-04-10T10:56:51Z" finished-at="2017-04-10T11:00:04Z">
      <class name="testScripts.UnitReconcile">
        <test-method status="PASS" signature="startTesting(java.lang.String, java.lang.String)[pri:0, instance:testScripts.UnitReconcile@4abdb505]" name="startTesting" is-config="true" duration-ms="4078" started-at="2017-04-10T16:24:34Z" finished-at="2017-04-10T16:24:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[QA3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTesting -->
        <test-method status="PASS" signature="addNewSheet()[pri:0, instance:testScripts.UnitReconcile@4abdb505]" name="addNewSheet" is-config="true" duration-ms="491" started-at="2017-04-10T16:26:51Z" finished-at="2017-04-10T16:26:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewSheet -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testScripts.UnitReconcile@4abdb505]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2017-04-10T16:26:51Z" finished-at="2017-04-10T16:26:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="UntRec()[pri:0, instance:testScripts.UnitReconcile@4abdb505]" name="UntRec" duration-ms="192522" started-at="2017-04-10T16:26:52Z" finished-at="2017-04-10T16:30:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UntRec -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:testScripts.UnitReconcile@4abdb505]" name="AfterMethod" is-config="true" duration-ms="146" started-at="2017-04-10T16:30:04Z" finished-at="2017-04-10T16:30:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="endScript()[pri:0, instance:testScripts.UnitReconcile@4abdb505]" name="endScript" is-config="true" duration-ms="21" started-at="2017-04-10T16:30:04Z" finished-at="2017-04-10T16:30:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endScript -->
      </class> <!-- testScripts.UnitReconcile -->
    </test> <!-- Test7 -->
  </suite> <!-- Suite -->
</testng-results>
